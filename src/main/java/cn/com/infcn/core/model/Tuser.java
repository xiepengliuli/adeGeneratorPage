package cn.com.infcn.core.model;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import cn.com.infcn.core.modelAdd.TdiseasePrivilege;

/**
 * 
 * Tuser generated by 项目开发部
 */
@Entity
@Table(name = "ade_user")
public class Tuser implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	//
	private String id;
	//
	private String loginName;
	//
	private String userName;
	//
	private String nameLetter;
	//
	private String password;
	//
	private String sex;
	//
	private String email;
	//
	private String telePhone;
	//
	private String userPhoto;
	//
	private String mobilePhone;
	//
	private String userDesc;
	//
	private String userState;
	//
	private Date createDate;
	//
	private Date updateDate;
	// 多个ip用;隔开
	private String ip;
	//
	private Set<Tgroup> tgroupsByCreateUser = new HashSet<Tgroup>(0);
	//
	private Set<Tgroup> tgroupsByLastModifyUser = new HashSet<Tgroup>(0);

	private Set<Trole> troles = new HashSet<Trole>(0);

	private Set<TdiseasePrivilege> tdiseasePrivilege = new HashSet<TdiseasePrivilege>(0);

	public Tuser() {
	}

	public Tuser(String id) {
		this.id = id;
	}

	public Tuser(String id, String loginName, String userName, String nameLetter, String password, String sex,
			String email, String telePhone, String userPhoto, String mobilePhone, String userDesc, String userState,
			Date createDate, Date updateDate, String ip, Set<Tgroup> tgroupsByCreateUser,
			Set<Tgroup> tgroupsByLastModifyUser, Set<Trole> troles, Set<TdiseasePrivilege> tdiseasePrivilege) {
		super();
		this.id = id;
		this.loginName = loginName;
		this.userName = userName;
		this.nameLetter = nameLetter;
		this.password = password;
		this.sex = sex;
		this.email = email;
		this.telePhone = telePhone;
		this.userPhoto = userPhoto;
		this.mobilePhone = mobilePhone;
		this.userDesc = userDesc;
		this.userState = userState;
		this.createDate = createDate;
		this.updateDate = updateDate;
		this.ip = ip;
		this.tgroupsByCreateUser = tgroupsByCreateUser;
		this.tgroupsByLastModifyUser = tgroupsByLastModifyUser;
		this.troles = troles;
		this.tdiseasePrivilege = tdiseasePrivilege;
	}

	@Id
	@Column(name = "ID", unique = true, nullable = false, length = 32)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tuser")
	public Set<TdiseasePrivilege> getTdiseasePrivileges() {
		return this.tdiseasePrivilege;
	}

	public void setTdiseasePrivileges(Set<TdiseasePrivilege> tdiseasePrivilege) {
		this.tdiseasePrivilege = tdiseasePrivilege;
	}

	@Column(name = "LOGIN_NAME", nullable = false, length = 100)
	public String getLoginName() {
		return this.loginName;
	}

	public void setLoginName(String loginName) {
		this.loginName = loginName;
	}

	@Column(name = "USER_NAME", nullable = true, length = 50)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "NAME_LETTER", nullable = true, length = 10)
	public String getNameLetter() {
		return this.nameLetter;
	}

	public void setNameLetter(String nameLetter) {
		this.nameLetter = nameLetter;
	}

	@Column(name = "PASSWORD", nullable = false, length = 100)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "SEX", nullable = true, length = 2)
	public String getSex() {
		return this.sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}

	@Column(name = "EMAIL", nullable = true, length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "TELE_PHONE", nullable = true, length = 30)
	public String getTelePhone() {
		return this.telePhone;
	}

	public void setTelePhone(String telePhone) {
		this.telePhone = telePhone;
	}

	@Column(name = "USER_PHOTO", nullable = true, length = 255)
	public String getUserPhoto() {
		return this.userPhoto;
	}

	public void setUserPhoto(String userPhoto) {
		this.userPhoto = userPhoto;
	}

	@Column(name = "MOBILE_PHONE", nullable = true, length = 30)
	public String getMobilePhone() {
		return this.mobilePhone;
	}

	public void setMobilePhone(String mobilePhone) {
		this.mobilePhone = mobilePhone;
	}

	@Column(name = "USER_DESC", nullable = true, length = 255)
	public String getUserDesc() {
		return this.userDesc;
	}

	public void setUserDesc(String userDesc) {
		this.userDesc = userDesc;
	}

	@Column(name = "USER_STATE", nullable = true, length = 2)
	public String getUserState() {
		return this.userState;
	}

	public void setUserState(String userState) {
		this.userState = userState;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_DATE", nullable = true)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATE_DATE", nullable = true)
	public Date getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	@Column(name = "IP", nullable = true)
	public String getIp() {
		return this.ip;
	}

	public void setIp(String ip) {
		this.ip = ip;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tuserByCreateUser")
	public Set<Tgroup> getTgroupsByCreateUser() {
		return this.tgroupsByCreateUser;
	}

	public void setTgroupsByCreateUser(Set<Tgroup> tgroupsByCreateUser) {
		this.tgroupsByCreateUser = tgroupsByCreateUser;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tuserByLastModifyUser")
	public Set<Tgroup> getTgroupsByLastModifyUser() {
		return this.tgroupsByLastModifyUser;
	}

	public void setTgroupsByLastModifyUser(Set<Tgroup> tgroupsByLastModifyUser) {
		this.tgroupsByLastModifyUser = tgroupsByLastModifyUser;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "ade_user_role", joinColumns = {
			@JoinColumn(name = "USER_ID", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "ROLE_ID", nullable = false, updatable = false) })
	public Set<Trole> getTroles() {
		return this.troles;
	}

	public void setTroles(Set<Trole> troles) {
		this.troles = troles;
	}
}
